[config]
name = %name%
source = 
configSource = 

[start]
command = %command%

[plugins]
pluginDir = plugins
pluginMatch = \.(phar|zip|jar)$

[encoding]
encode = utf-8
decode = %decode%
fileEncoding = utf-8

[settings]
logFile = server.log
#followLog = False
## Only used if followLog is true, the interval in milliseconds at
## which to check the log file for new content
#logCheckInterval = 500
## Rotate the log every X bytes
#logRotateSize = 
## Use special method to rotate log, use this if normal rename rotation doesn't work
#logPersistent = False
## Maximum number of logs to keep
#logBackupCount = 5
## Advanced: Read at most X bytes from the file at a time
#logMaxRead = 4096
## Check every X milliseconds if the log needs to be rotated
#logRotateCheckInterval = 20000
## Print every line received from the server
#debugRawLine = False
## Print every line after cleanup
#debugCleanLine = False
## Print every line after the first parse pass
#debugParseLine = False
## Use the Multicraft launcher to wrap the gameserver (simulates a real command line)
#useLauncher = False
## Assume Minecraft is still running override (0: Known console output, 1: "List" command output, 2: Any console output)
#pongMode = 0
## Minecraft response timeout override (milliseconds)
#pingTimeout = 20000
## Minecraft pint interval override (milliseconds)
#pingInterval = 15000
## Minecraft crash restart delay overrice (milliseconds)
#crashRestartDelay = 2000
## Console output rate limit override
#rateLimit = 30
## Autosave interval overrice (milliseconds)
#saveInterval = 600000
## Player info save method override (0: Never Save, 1: Update Existing, 2: Always Save)
#savePlayerInfo = 1
## Print server setting information
#debugSettings = False
## Restart the server after a crash or unexpected exit
#restartOnCrash = False
## Print line parser information
#debugParse = False


## Command remapping
[commands]
say = say
list = list
save-on = save-on
save-off = save-off
save-all = save-all
stop = stop
tell = tell
give = give
tp = tp
deop = deop
op = op
pardon-ip = pardon-ip
ban-ip = ban-ip
pardon = pardon
ban = ban
kick = kick
help = help


## Console output parsing can be completely customized to support
## any format (and theoretically any game). Please contact us if you require this.

[parse_startup]
start=^\s*Done
important=true

[parse_players]
listSplit=\s*,\s*
listLine=(?P<name>.*)
start=^(?:Connected\s*players|Online \([\d]+[^)]*\)):\s*(?P<v_listStr_append>.*)$
start1=^There are (?P<v_maxDataLines>\d+)/\d+ players
data=^(?P<v_listStr_append>.+)$
trigger=list
important=true
isList=true
maxLines=2
maxDataLines=0

[parse_chat]
start=^(?P<source>\[[^\]]+\])?\s*<(?P<sender>[^>]*)>\s*(?P<message>.*)$

[parse_command]
shortStart=(?:tried|issued server) command
start=^(?P<sender>.+)\s(?:tried|issued\sserver)\scommand:\s*(?P<command>.*)$
important=true

[parse_connect]
shortStart=logged in with entity id \d+ at
start=^(?P<name>.+?)\s*\[/(?P<ip>[^\]:]*)(:?(?P<port>[0-9]+)?)\]\s*logged in
start1=^(?P<name>.+)(?P<ip>\s+)logged in

[parse_disconnect]
shortStart=(lost connection|Kick(ing|ed))
start=^(?P<name>.+)\slost connection:\s*(?P<reason>.*)$
start1=^CONSOLE:\s*Kicking\s(?P<name>.+)$
start2=Kicked\s(?P<name>.+) from the game\s*$

[parse_saveComplete]
start=^CONSOLE:\s+Save complete.

[parse_unknown]
start=^Unknown console command

#hide from server console
[parse_hide]
start=^(There are |\d+ players are|Connected players)

#split each line into time, type and actual log entry
[parse_log]
start=^(?P<time>(:?[-\d]+ )?\[?[:\d]+\]?)\s+\[?(?P<type>[^]]+)\]\:?\s+(:?\[[^]]+\]\s+)?(?P<line>.*)$

#cleanup each line before parsing, remove coloring, backspace characters, etc.
[parse_clean]
start=(^[>\r\s]+|\x1b\[[0-9;]*m|\b)

[parse_restart]
start=

[parse_stop]
start=